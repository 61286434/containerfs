syntax="proto3";

package vp;

service VolMgr {

    // cluster opt
    rpc DataNodeRegistry(DataNode) returns (DataNodeRegistryAck){};
    rpc MetaNodeRegistry(MetaNode) returns (MetaNodeRegistryAck){};
    rpc	DelDataNode(DelDataNodeReq) returns (DelDataNodeAck){};
    rpc GetVolMgrRG(GetVolMgrRGReq) returns (GetVolMgrRGAck){};    
    rpc GetMetaNodeRG(GetMetaNodeRGReq) returns (GetMetaNodeRGAck){};
    rpc CreateVol(CreateVolReq) returns (CreateVolAck){};
    rpc DeleteVol(DeleteVolReq) returns (DeleteVolAck){};
    rpc GetMetaNodeRGPeers(GetMetaNodeRGPeersReq) returns (GetMetaNodeRGPeersAck){};
    rpc GetBlockGroupByID(GetBlockGroupByIDReq) returns (GetBlockGroupByIDAck){};
    rpc Migrate(MigrateReq) returns (MigrateAck){};
    rpc ExpandVol(ExpandVolReq) returns (ExpandVolAck){};
    rpc SnapShotCluster(SnapShotClusterReq) returns (SnapShotClusterAck){};

    // Web Info
    rpc ClusterInfo(ClusterInfoReq) returns (ClusterInfoAck){};
    rpc GetDataNode(GetDataNodeReq) returns (GetDataNodeAck){};
    rpc GetMetaNode(GetAllMetaNodeReq) returns (GetAllMetaNodeAck){};
    rpc MetaNodeInfo(MetaNodeInfoReq) returns (MetaNodeInfoAck){};
    rpc VolMgrInfo(VolMgrInfoReq) returns (VolMgrInfoAck){};
    rpc VolumeInfos(VolumeInfosReq) returns (VolumeInfosAck){};
    rpc GetVolInfo(GetVolInfoReq) returns (GetVolInfoAck){};
    rpc GetBlockGroupInfo(GetBlockGroupInfoReq) returns (GetBlockGroupInfoAck){};
    rpc NodeMonitor(NodeMonitorReq) returns (NodeMonitorAck){};

}

message NULL{
}

message DataNode {
    string Host = 1;
    string MountPoint = 2 ;
    string Tier = 3;
    int32 Capacity = 4; //GB
    int32 Used = 5;
    int32 Free = 6;
    int32 Status = 7;
}

message DataNodeRegistryAck {
    int32 Ret = 1;
}

message DataNodeBGPS {
    string Host = 1;
    repeated uint64 BGPS = 2;
}

message MetaNode {
    uint64 Id =  1;
    string Host = 2;
    int32 Status = 3;
    uint64 Mem = 4;
   
}

message MetaNodeRegistryAck {
    int32 Ret = 1;
}

message UpdateBlkDBAck {
    int32 Ret = 1;
}

message GetDataNodeReq {
}
message GetDataNodeAck {
    int32 Ret = 1;
    repeated DataNode DataNodes = 2;
}
message GetAllMetaNodeReq {
}
message GetAllMetaNodeAck {
    int32 Ret = 1;
    repeated MetaNode MetaNodes = 2;
}
message DelDataNodeReq {
    string Host = 1;
}
message DelDataNodeAck {
    int32 Ret = 1;
}

message Volume {
	string UUID = 1;
	string Name = 2;
    string Tier = 3;
	int32  TotalSize = 4;
	int32  AllocatedSize = 5;
	uint64 RGID = 6;
    repeated uint64 BlockGroups =7;
}

message Vols {
	repeated Volume Volumes=1;
}

message MetaNodeRG {
    uint64 RGID = 1;
    string UUID = 2;
    repeated MetaNode MetaNodes = 3;
}
message CreateVolReq {
    string VolName = 1 ;
    int32  SpaceQuota = 2 ;
    string Tier = 3;
}
message CreateVolAck {
    int32 Ret = 1;
    string UUID = 2;
    uint64 RaftGroupID = 3;
}

message DeleteVolReq {
    string UUID = 1 ;
}
message DeleteVolAck {
    int32 Ret = 1;
}

message GetMetaNodeRGReq {
    string UUID = 1;
}
message GetMetaNodeRGAck {
    int32 Ret = 1;
    repeated MetaNode MetaNodes = 2;
    string Leader = 3;    
}

message GetVolMgrRGReq{
}
message GetVolMgrRGAck{
    int32 Ret=1;
    repeated string Peers = 2;
    string Leader = 3;   
}

message ExpandVolTSReq {
    string VolID = 1 ;
    int32  ExpandQuota = 2 ;
}
message ExpandVolTSAck {
    int32 Ret = 1;
}

message ExpandVolRSReq {
    string VolID = 1 ;
}
message ExpandVolRSAck {
    int32 Ret = 1;
    repeated BlockGroup BlkGroups = 2;
}

message DelVolRSForExpandReq {
    string UUID=1;
    repeated BlockGroup BlkGroups = 2;
}
message DelVolRSForExpandAck {
    int32 Ret=1;
}

message GetVolInfoReq {
    string UUID = 1 ;
}

message GetVolInfoAck {
    int32 Ret = 1;
    uint64 RGID = 2;
    Volume Volume = 3;
}

message MigrateReq {
    string DataNodeHost = 1;
}

message MigrateAck {
    int32 Ret = 1;
}

message BlockGroup{
    uint64 BlockGroupID = 1;
    string VolID =2;
    uint64 RGID = 3;
    int64 FreeSize = 4;
    int32 Status = 5;
    repeated string Hosts = 6;
}

message GetMetaNodeRGPeersReq{
    uint64 MetaNodeID  = 1;
}

message GetMetaNodeRGPeersAck{
    int32 Ret=1;
    repeated MetaNodeRG RaftGroups =2;
}

message GetBlockGroupByIDReq{
    uint64 BlockGroupID = 1;
}
message GetBlockGroupByIDAck{
    int32 Ret = 1;
    BlockGroup BlockGroup = 2;
}


// Web

// web -> leader metanode
message ClusterInfoReq {
}
message ClusterInfoAck {
    int32 Ret = 1;
    int32 MetaNum = 2;
    int32 DataNum = 3;
    int32 VolNum = 4;
    int32 ClusterSpace = 5;
    int32 ClusterFreeSpace = 6;
    int32 IO = 7;
    int32 IOPS = 8;
}

// web -> each metanode
message MetaNodeInfoReq {
}
message MetaNodeInfoAck {
    int32 Ret = 1;
    uint64 MetaID = 2;
    bool  IsLeader = 3;
    uint64 AppliedIndex = 4;
}

// web -> each volmgr
message VolMgrInfoReq {
}
message VolMgrInfoAck {
    int32 Ret = 1;
    uint64 VolMgrID = 2;
    bool  IsLeader = 3;
    string Leader = 4;
    uint64 AppliedIndex = 5;
}

// web -> leader metanode
message DataNodeInfoReq {
}
message DataNodeInfoAck {
    int32 Ret = 1;
    repeated DataNode DataNodes = 2;
}

// web -> cluster leader metanode
message VolumeInfosReq {
}
message VolumeInfosAck {
    int32 Ret = 1;
    repeated Volume Volumes = 2;
}

// web -> the datanode or metanode (ip:port)
message NodeMonitorReq {
}
message NodeMonitorAck {
    int32 Ret = 1;
    NodeInfo NodeInfo = 2;
}
message NodeInfo {
    double CpuUsage = 1;
    double CpuLoad = 2;
    uint64 FreeMem = 3;
    uint64 TotalMem = 4;
    double  MemUsedPercent = 5;
    uint64  PathTotal = 6;
    uint64  PathFree = 7;
    double  PathUsedPercent = 8;
    repeated DiskIO DiskIOs = 9;
    repeated NetIO NetIOs = 10;
}

message DiskIO {
    uint64 ReadCount = 1;
    uint64 WriteCount = 2;
    uint64 ReadBytes = 3;
    uint64 WriteBytes = 4;
    uint64 IopsInProgress = 5;
    uint64 IoTime = 6;
    uint64 WeightedIO = 7;
    string Name = 8;
}

message NetIO {
    uint64 BytesSent = 1;
    uint64 BytesRecv = 2;
    uint64 PacketsSent = 3;
    uint64 PacketsRecv = 4;
    uint64 Errin = 5;
    uint64 Errout = 6;
    uint64 Dropin = 7;
    uint64 Dropout = 8;
    string Name = 9;
}

message ExpandVolReq{
    string UUID = 1;
    int32 Space = 2;
}
message ExpandVolAck{
    int32 Ret = 1;
}

message SnapShotClusterReq{
}

message SnapShotClusterAck{
    int32 Ret = 1;
}

message GetBlockGroupInfoReq{
    uint64 BGID = 1;
}
message GetBlockGroupInfoAck{
    int32 Ret = 1;
    BlockGroup BlockGroup = 2;
}
