syntax="proto3";

package mp;

service MetaNode {
    rpc CreateNameSpace(CreateNameSpaceReq) returns (CreateNameSpaceAck){};
    rpc DeleteNameSpace(DeleteNameSpaceReq) returns (DeleteNameSpaceAck){};

    rpc GetFSInfo(GetFSInfoReq) returns (GetFSInfoAck){};

    rpc CreateDir(CreateDirReq) returns (CreateDirAck){};
    rpc Stat(StatReq) returns (StatAck){};
    rpc List(ListReq) returns (ListAck){};
    rpc DeleteDir(DeleteDirReq) returns (DeleteDirAck){};
    rpc Rename(RenameReq) returns (RenameAck){};

    rpc CreateFile(CreateFileReq) returns (CreateFileAck){};
    rpc DeleteFile(DeleteFileReq) returns (DeleteFileAck){};

    rpc AllocateChunk(AllocateChunkReq) returns (AllocateChunkAck){};
    rpc GetFileChunks(GetFileChunksReq) returns (GetFileChunksAck){};
    rpc SyncChunk(SyncChunkReq) returns (SyncChunkAck){};

    rpc UpdateBlkGrp(UpdateBlkGrpReq) returns (UpdateBlkGrpAck){};

}

message NULL{
}
message CreateNameSpaceReq{
    string VolID = 1;
    int32  Type =2 ;
}
message CreateNameSpaceAck{
    int32 Ret = 1;
}
message DeleteNameSpaceReq{
    string VolID = 1;
    int32  Type =2 ;
}
message DeleteNameSpaceAck{
    int32 Ret = 1;
}
message GetFSInfoReq {
    string VolID = 1;
}
message GetFSInfoAck {
    int32 Ret = 1;
    uint64 TotalSpace = 2;
    uint64 FreeSpace = 3;
}

message CreateDirReq{
    string VolID = 1;
    string FullPathName = 2;
}
message CreateDirAck{
    int32 Ret = 1;
}
message DeleteDirReq{
    string VolID = 1;
    string FullPathName = 2;
}
message DeleteDirAck{
    int32 Ret = 1;
}
message RenameReq{
    string VolID = 1;
    string FullPathName1 = 2;
    string FullPathName2 = 3;
}
message RenameAck{
    int32 Ret = 1;
}
message CreateFileReq{
    string VolID = 1;
    string FullPathName = 2;
}
message CreateFileAck{
    int32 Ret = 1;
}
message DeleteFileReq{
    string VolID = 1;
    string FullPathName = 2;
}
message DeleteFileAck{
    int32 Ret = 1;
}
message StatFileReq{
    string VolID = 1;
    string FullPathName = 2;
}
message StatFileAck{
    int32 Ret = 1;
    InodeInfo InodeInfo = 2;
}
message StatReq{
    string VolID = 1;
    string FullPathName = 2;
}
message StatAck{
    int32 Ret = 1;
    InodeInfo InodeInfo = 2;
}
message ListReq{
    string VolID = 1;
    string FullPathName = 2;
}
message ListAck{
    int32 Ret = 1;
    repeated InodeInfo InodeInfos = 2;
}


message AllocateChunkReq {
    int64 SequenceID = 1;
    string VolID = 2;
    string FileName = 3;
}
message AllocateChunkAck {
    int32 Ret = 1;
    int64 SequenceID = 2;
    ChunkInfoWithBG ChunkInfo = 3; 
}

message GetFileChunksReq {
    string VolID = 1;
    string FileName = 2;
}
message GetFileChunksAck {
    int32 Ret = 1;
    repeated ChunkInfoWithBG ChunkInfos = 2; 
}


message SyncChunkReq {
    string VolID = 1;
    string FileName = 2;
    ChunkInfo ChunkInfo = 3;
    int64 Size = 4;
}
message SyncChunkAck {
    int32 Ret = 1;
}
message FinishChunkReq {
    int64 SequenceID = 1;
    int64 ChunkID = 2;
    string FileName = 3;
    int64 ChunkSize = 4;
    bool CloseWithError = 5;
}
message FinishChunkAck {
    int32 Ret = 1;
    int64 SequenceID = 2;
}

message UpdateBlkGrpReq {
    string VolID = 1;
    repeated UpdateBlkGrpInfo UpdateBlkGrpInfo = 2;
}
message UpdateBlkGrpAck {
    int32 Ret = 1;
}

message UpdateBlkGrpInfo {
    int32 BlkGrpID = 1;
    int32 BlockID = 2;
    int32 Status = 3;
}

message InodeInfo{
    int64 ParentInodeID = 1;
    int64 InodeID = 2;
    string Name = 3;
    int64 ModifiTime = 4;
    int64 AccessTime = 5;
    bool InodeType = 6;
    int64 FileSize = 7;
    repeated int64 ChunkIDs = 8;
    repeated int64 ChildrenInodeIDs = 9;
}

message BlockGroup{
    int32 BlockGroupID = 1;
    int32 FreeCnt = 2;
    int32 Status = 3;
    repeated BlockInfo BlockInfos = 4;
}

message BlockInfo{
    int32 BlockID = 1;
    int32 DataNodeIP = 2;
    int32 DataNodePort = 3;
}

message ChunkInfo{
    int64 ChunkID = 1;
    int32 ChunkSize = 2;
    int32 BlockGroupID = 3;
}

message ChunkInfoWithBG{
    int64 ChunkID = 1;
    int32 ChunkSize = 2;
    BlockGroup BlockGroup = 3;
}